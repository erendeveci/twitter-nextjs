import { getServerSession } from "next-auth";
import { authOptions } from "@/libs/authOptions";

import prisma from "@/libs/prismadb";

export default async function getSession() {
  const session = await getServerSession(authOptions);

  if (!session?.user?.email) {
    throw new Error("Not signed in");
  }

  const currentUser = await prisma?.user.findUnique({
    where: {
      email: session.user.email,
    },
  });

  if (!currentUser) {
    throw new Error("Not signed in");
  }

  return { currentUser };
}


//server auth

import getSession from "@/libs/serverAuth";
import { NextResponse } from "next/server";

export async function GET(request: Request) {
  try {
    const { currentUser } = await getSession();
    return new Response(JSON.stringify(currentUser), { status: 200 });
  } catch (error) {
    return new Response(JSON.stringify("Not signed in"), { status: 404 });
  }
}

//current api